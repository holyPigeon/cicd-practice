name: Deploy

on:
  push:
    branches:
      main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Github Repository 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml 파일 만들기
        run: echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: Gradle 테스트 및 빌드
        run: ./gradlew clean build -x test

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Hub 이미지 빌드 및 푸시
        run: |
          docker build --platform=linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/spring-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-22.04

    steps:
      - name: "레포지토리에서 체크아웃한다."
        uses: actions/checkout@v4

      - name: "애플리케이션 서버를 구동한다."
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd ./cicd-practice
            docker compose pull
            docker compose --env-file .env up -d

  check:
    needs: deploy
    runs-on: ubuntu-22.04

    steps:
      - name: "애플리케이션 서버 정상 동작 여부를 점검한다."
        uses: jtalk/url-health-check-action@v3
        with:
          url: /health
          max-attempts: 5
          retry-delay: 5s
